/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-08-10 22:08:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class product_005fread_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction view(temp){\r\n");
      out.write("\t\tfilename = \"http://localhost:8080/Project08_07/upload/\"+temp;\r\n");
      out.write("\t\ti = window.open(filename,\"win\",\"height=350,width=450,toolbar=0,menubar=0,scrollbars=1,resizable=1,status=0\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String ca="";
	String pn="";
	
	if(request.getParameter("cat") != null)
		if(!(request.getParameter("cat").equals("")))
			ca=request.getParameter("cat");
	if(request.getParameter("pname") != null)
		if(!(request.getParameter("pname").equals("")))
			pn = request.getParameter("pname");
	
	String sql=null;
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	
	long id = Long.parseLong(request.getParameter("id"));
	String url = "http://localhost:8080/Project08_07/upload/";//?
	String small=null;
	
	out.print("[<a href=\"product_list.jsp?go="+ request.getParameter("go"));
	out.print("&cat="+ ca +"&pname"+pn+"\">상품 목록으로</a>]");
	
	try{
		Class.forName("com.mysql.jdbc.Driver");
	}catch(ClassNotFoundException e){
		e.printStackTrace();
	}
	
	try{
		con = DriverManager.getConnection("jdbc:mysql://localhost:3306/member","hkitJeongwon","gj0123");
	}catch(SQLException e){
		e.printStackTrace();
	}
	
	try{
		sql = "select * from product where id=?";
		pstmt = con.prepareStatement(sql);
		pstmt.setLong(1, id);
		rs= pstmt.executeQuery();
		
		if(!(rs.next())){
			out.println("해당 내용이 없습니다.");
		}else{
			small=url+rs.getString("small");
			out.println("<table width=500 border=0 >");
			out.println("<tr><th rowspan=3>");
			 out.println("<A href=JavaScript:view(\""+rs.getString("large")+"\")>"); 
			   out.println("<IMG width=100 height=100 src="+small+">");
			   out.println("<BR>확대</A></TH>");
			   out.println("<TH bgcolor=#003399>");
			   out.println("<FONT face=굴림 color=white>");
			   out.println(rs.getString("pname")+"("+rs.getLong("id")+")");
			   out.println("---작성자:"+rs.getString("wname"));
			   out.println("</FONT></TH></TR>");  
			   out.println("<TR>");
			   out.println("<TD>");
			   out.println("<U>상세 설명 :</U><BR>");
			   out.println(rs.getString("description") );
			   out.println("</TD></TR>"); 
			   out.println("<TR><TD align=right>");   
			   out.println("제조(공급)원:"+rs.getString("sname")+"<BR>");
			   out.println("시중가:<STRIKE>"+rs.getString("price")+"</STRIKE>원");
			   out.println("판매가:"+rs.getString("downprice")+"원");
			   out.println("</TD></TR>");  
			   out.println("</TABLE>");
		}
		rs.close();
		pstmt.close();
		con.close();
	}catch(SQLException e){
		e.printStackTrace();
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
