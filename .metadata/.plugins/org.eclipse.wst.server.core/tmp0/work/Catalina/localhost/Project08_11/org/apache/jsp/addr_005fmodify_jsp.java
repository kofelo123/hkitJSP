/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-08-14 06:39:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class addr_005fmodify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write(" <meta charset=\"UTF-8\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write(" function del(id){\r\n");
      out.write("\t \tresult = confirm(\"정말 삭제하시겠습니까?\");\r\n");
      out.write("\t \tif(result==true)\r\n");
      out.write("\t\tlocation.href=\"addr_remove.jsp?id=\"+id;\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write(" function check(){\r\n");
      out.write("\t\twith(document.addrForm){\r\n");
      out.write("\t\t\tif(name.value.length == 0){\r\n");
      out.write("\t\t\t\talert(\"이름은 반드시 입력해야 합니다.\");\r\n");
      out.write("\t\t\t\tname.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tif(phonenum.value.length == 0){\r\n");
      out.write("\t\t\t\talert(\"전화번호는 반드시 입력해야 합니다.\");\r\n");
      out.write("\t\t\t\tphonenum.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tif(birthday.value.length == 0){\r\n");
      out.write("\t\t\t\talert(\"생일은 반드시 입력해야 합니다.\");\r\n");
      out.write("\t\t\t\tbirth.focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tdocument.addrForm.submit();\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");

	String id=request.getParameter("id");
	String name="";
	String phonenum="";
	String birthday="";
	String company="";
	String memo="";
	String email="";
	String pass=request.getParameter("pass");
	
	if(!(pass.equals("1234")))
		out.println("<script>alert('비밀번호가 일치하지 않습니다.');history.go(-1);</script>");
	
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String sql="";
	
	try{
		Class.forName("com.mysql.jdbc.Driver");
	}catch(ClassNotFoundException e){ 
		e.printStackTrace();
	}
	
	try{
		con = DriverManager.getConnection("jdbc:mysql://localhost:3306/addr","hkitJeongwon","gj0123");
	}catch(SQLException e){
		e.printStackTrace();
	}
	
	try{
		sql="select * from addrbook where id=?";
		pstmt=con.prepareStatement(sql);
		pstmt.setString(1, id);
		rs=pstmt.executeQuery();
		rs.next();
		name=rs.getString(2);
		email=rs.getString(3);
		phonenum=rs.getString(4);
		birthday=rs.getString(5);
		company=rs.getString(6);
		memo=rs.getString(7);
	}catch(SQLException e){
		e.printStackTrace();
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t<h1>주소록:등록화면</h1>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<a href=\"list.jsp\">주소록 등록</a><br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<form name=\"addrForm\" method=\"get\" action=\"addr_insert_save.jsp\">\r\n");
      out.write("\t\t\t<table width=\"500\" border='0' style=\"text-align:center;background-color:#7ec6ef;color:white\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"text\" name=\"name\" value=");
      out.print(name );
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>e-mail</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"text\" name=\"email\" value=");
      out.print(email );
      out.write(" ></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"text\" name=\"phonenum\" value=");
      out.print(phonenum );
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>생일</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"date\" name=\"birthday\" value=");
      out.print(birthday );
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>회사</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"text\" name=\"company\" value=");
      out.print(company );
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>메모</th>\r\n");
      out.write("\t\t\t\t<td align=\"left\"><input type=\"text\" name=\"memo\" value=");
      out.print(memo );
      out.write("></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<input type=hidden name=\"id\" value=");
      out.print(id );
      out.write(">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" ><input type=\"button\" value=\"저장\" onClick=\"check();\">\r\n");
      out.write("\t\t\t\t<input type=\"reset\" value=\"취소\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"삭제\" onClick=\"del(");
      out.print(id);
      out.write(");\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</center>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
