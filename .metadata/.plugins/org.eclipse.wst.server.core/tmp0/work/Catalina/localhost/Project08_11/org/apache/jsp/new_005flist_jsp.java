/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-08-18 02:50:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import addr.dto.AddrDTO;
import addr.*;
import java.util.*;

public final class new_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("addr");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("addr.dto.AddrDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      addr.dao.AddrDAO addrDaoBean = null;
      addrDaoBean = (addr.dao.AddrDAO) _jspx_page_context.getAttribute("addrDaoBean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (addrDaoBean == null){
        addrDaoBean = new addr.dao.AddrDAO();
        _jspx_page_context.setAttribute("addrDaoBean", addrDaoBean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      java.util.Vector datas = null;
      datas = (java.util.Vector) _jspx_page_context.getAttribute("datas", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (datas == null){
        datas = new java.util.Vector();
        _jspx_page_context.setAttribute("datas", datas, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write(" \r\n");
      out.write("\r\n");


	String keyword=request.getParameter("keyword");
	String category=request.getParameter("category");

	//paing
	
	int where = 1;
	
	int totalgroup=0;
	int maxpages=5;
	int startpage=1;
	int endpage=startpage+maxpages-1;
	int wheregroup=1;
	

	if(request.getParameter("go") != null){ //페이지번호 링크를 누를때 go값 전달됨. -> where로 저장.
		where = Integer.parseInt(request.getParameter("go"));
		wheregroup = (where-1)/maxpages + 1;
		startpage=(wheregroup-1) * maxpages+1;
		endpage=startpage+maxpages-1;
	}else if (request.getParameter("gogroup") != null){//다음,이전,처음 ,마지막 링크누를시에 gogroup값 전달 -> wheregroup을 gogroup값을 변경한다.
		wheregroup = Integer.parseInt(request.getParameter("gogroup"));
		startpage=(wheregroup-1) * maxpages+1;
		where = startpage;
		endpage=startpage+maxpages-1;
	}
	
	int nextgroup = wheregroup + 1;
	int priorgroup = wheregroup-1;
	int startrow=0;
	int endrow=0;
	int maxrows=5;
	int totalrows=0;
	int totalpages=0;
	
	totalrows = datas.size();
	totalpages = (totalrows-1)/maxrows +1;
	startrow = (where-1) * maxrows;
	endrow=startrow+maxrows-1;
	if(endrow >= totalrows)
		endrow=totalrows-1;
	totalgroup = (totalpages-1)/maxpages +1;
	if(endpage>totalpages)
		endpage=totalpages;
	


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("function check(id){\r\n");
      out.write("\tpass = prompt('수정/삭제시 비밀번호입력');\r\n");
      out.write("\tif(pass != 1234){\r\n");
      out.write("\t\talert('비밀번호 입력실패');\r\n");
      out.write("\t\t}\r\n");
      out.write("\telse\r\n");
      out.write("\tlocation.href=\"new_controller.jsp?action=modify&id=\"+id;\r\n");
      out.write("\t/* location.href=\"new_controller.jsp?action=\"modify\"+id=\"+id+\"&pass=\"+pass; */\r\n");
      out.write("}\r\n");
      out.write("function search(){\r\n");
      out.write("\twith(document.search){\r\n");
      out.write("\t\tif(keyword.value.length == 0){\r\n");
      out.write("\t\t\talert(\"검색어를 입력해 주세요!!\");\r\n");
      out.write("\t\t\tkeyword.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tdocument.search.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<a href=\"new_controller.jsp?action=insertForm\">주소록등록</a>\r\n");
      out.write("\t<form method=\"get\" name=\"search\" action=\"new_controller.jsp\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td align=\"right\" width=\"241\">\r\n");
      out.write("\t\t<select name=\"category\">\r\n");
      out.write("\t\t\t<option value=\"name\">이름\r\n");
      out.write("\t\t\t<option value=\"company\">회사\r\n");
      out.write("\t\t\t<option value=\"memo\">메모\r\n");
      out.write("\t\t\t<option value=\"nameMemo\">이름+메모\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td width=\"127\" align=\"center\">\r\n");
      out.write("\t\t<input type=\"text\" size=\"17\" name=\"keyword\">\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<!-- <input type=\"hidden\" name=\"action\" value=\"searchList\"> -->\r\n");
      out.write("\t<td width=\"115\"><input type=\"button\" value=\"검색\" onClick=\"search();\"></a></td>\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\t<table width=\"800\" border='1' style=\"text-align:center;background-color:#7ec6ef;color:white;border-color:blue;\">\r\n");
      out.write("\t\t<tr><th>번호</th><th>이름</th><th>전화번호</th><th>생일</th><th>회사</th><th>메모</th></tr>\r\n");
      out.write("\t\t");

			for(int i=startrow; i<=endrow;i++){
				AddrDTO adt = (AddrDTO)datas.get(i);
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td><a href=\"javascript:check(");
      out.print(adt.getId() );
      out.write(")\" style='text-decoration:none'>");
      out.print( adt.getId() );
      out.write("</a></td>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t<td>");
      out.print(adt.getName() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(adt.getPhonenum() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(adt.getBirthday() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(adt.getCompany() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(adt.getMemo() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t");

			}
			
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");

	String action=request.getParameter("action");
	
	
	if(wheregroup > 1){
		
		out.print("[<a href=new_controller.jsp?action="+action+"&gogroup=1&keyword="+keyword+"&category="+category+">처음</a>]");
		out.print("[<a href=new_controller.jsp?action="+action+"&gogroup="+priorgroup+"&keyword="+keyword+"&category="+category+">이전</a>]");
	}else{
		System.out.println("where group:"+wheregroup);
		out.println("[처음]");
		out.println("[이전]"); }
	
	
	if(datas.size() !=0){
		for(int jj=startpage; jj<=endpage; jj++){
			if(jj==where){
				System.out.println("j-keywordue:"+jj);
				System.out.println("where:"+where);
				out.println("["+jj+"]");
				
			}
			else{
				out.print("<a href=new_controller.jsp?action="+action+"&go="+jj+"&keyword="+keyword+"&category="+category+">["+jj+"]</a>");
		}
		
		}
	}
	if(wheregroup < totalgroup){
		out.print("[<a href=new_controller.jsp?action="+action+"&gogroup=" + nextgroup+"&keyword="+keyword+"&category="+category+">다음</a>]");
		out.print("[<a href=new_controller.jsp?action="+action+"&gogroup="+ totalgroup+"&keyword="+keyword+"&category="+category+">마지막</a>]");
	}else{
		out.println("[다음]");
		out.println("[마지막]");
	}
	out.println("전체 방명록수 :"+totalrows);
	
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
